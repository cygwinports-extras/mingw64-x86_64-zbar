--- origsrc/zbar-0.10/configure.ac	2013-11-27 19:01:22.931327100 -0600
+++ src/zbar-0.10/configure.ac	2013-11-27 20:39:23.866697400 -0600
@@ -155,7 +155,8 @@ configure --disable-video to skip buildi
          [AC_MSG_WARN([v4l2 API not detected, upgrade your kernel!])])],
     [AC_CHECK_HEADERS([vfw.h], [with_video="vfw"],
       [AC_MSG_FAILURE([test for VfW video support failed!
-configure --disable-video to skip building vidoe support.])])])
+configure --disable-video to skip building video support.])],
+      [#include <windows.h>])])
 ])
 AM_CONDITIONAL([HAVE_VIDEO], [test "x$enable_video" != "xno"])
 AM_CONDITIONAL([HAVE_V4L1],
--- origsrc/zbar-0.10/zbar/Makefile.am.inc	2009-10-23 13:16:44.000000000 -0500
+++ src/zbar-0.10/zbar/Makefile.am.inc	2013-11-27 21:44:24.257787000 -0600
@@ -62,7 +62,7 @@ endif
 if WIN32
 if HAVE_VIDEO
 zbar_libzbar_la_SOURCES += zbar/video/vfw.c
-zbar_libzbar_la_LIBADD += -lvfw32
+zbar_libzbar_la_LIBADD += -lmsvfw32 -lavicap32
 endif
 endif
 if !HAVE_VIDEO
--- origsrc/zbar-0.10/zbar/img_scanner.c	2009-10-23 13:16:44.000000000 -0500
+++ src/zbar-0.10/zbar/img_scanner.c	2013-11-27 21:43:13.550742800 -0600
@@ -27,8 +27,6 @@
 # include <inttypes.h>
 #endif
 #include <stdlib.h>     /* malloc, free */
-#include <time.h>       /* clock_gettime */
-#include <sys/time.h>   /* gettimeofday */
 #include <string.h>     /* memcmp, memset, memcpy */
 #include <assert.h>
 
@@ -40,6 +38,7 @@
 #endif
 #include "img_scanner.h"
 #include "svg.h"
+#include "timer.h"
 
 #if 1
 # define ASSERT_POS \
--- origsrc/zbar-0.10/zbar/jpeg.c	2009-10-23 13:16:44.000000000 -0500
+++ src/zbar-0.10/zbar/jpeg.c	2013-11-27 21:37:15.480262300 -0600
@@ -22,6 +22,9 @@
  *------------------------------------------------------------------------*/
 
 #include <stdio.h>
+#ifdef _WIN32
+#include <windows.h>
+#endif
 #include <jpeglib.h>
 #include <jerror.h>
 #include <setjmp.h>
--- origsrc/zbar-0.10/zbar/timer.h	2009-10-23 13:16:44.000000000 -0500
+++ src/zbar-0.10/zbar/timer.h	2013-11-27 21:41:44.493649000 -0600
@@ -26,6 +26,10 @@
 #include <time.h>
 #include <sys/time.h>   /* gettimeofday */
 
+#ifdef _WIN32
+#undef _POSIX_TIMERS
+#endif
+
 /* platform timer abstraction
  *
  * zbar_timer_t stores the absolute expiration of a delay from
--- origsrc/zbar-0.10/zbar/window.c	2009-10-23 13:16:44.000000000 -0500
+++ src/zbar-0.10/zbar/window.c	2013-11-27 21:42:50.970451300 -0600
@@ -23,8 +23,7 @@
 
 #include "window.h"
 #include "image.h"
-#include <time.h>       /* clock_gettime */
-#include <sys/time.h>   /* gettimeofday */
+#include "timer.h"
 
 zbar_window_t *zbar_window_create ()
 {
--- origsrc/zbar-0.10/zbar/processor/win.c	2009-10-23 13:16:44.000000000 -0500
+++ src/zbar-0.10/zbar/processor/win.c	2013-12-02 13:38:55.020666700 -0600
@@ -117,12 +117,12 @@ static LRESULT CALLBACK win_handle_event
                                           LPARAM lparam)
 {
     zbar_processor_t *proc =
-        (zbar_processor_t*)GetWindowLongPtr(hwnd, GWL_USERDATA);
+        (zbar_processor_t*)GetWindowLongPtr(hwnd, GWLP_USERDATA);
     /* initialized during window creation */
     if(message == WM_NCCREATE) {
         proc = ((LPCREATESTRUCT)lparam)->lpCreateParams;
         assert(proc);
-        SetWindowLongPtr(hwnd, GWL_USERDATA, (LONG_PTR)proc);
+        SetWindowLongPtr(hwnd, GWLP_USERDATA, (LONG_PTR)proc);
         proc->display = hwnd;
 
         zbar_window_attach(proc->window, proc->display, proc->xwin);
